
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADDASS ALIAS AND ANDLOG ASS BEGIN BREAK CASE CLASS CLASSVAR COMA CONSTANTS DEF DEFINED DIV DIVASS DO DOBLEPOINT DOUBLESECUENCEPOINT ELSE ELSIF END ENSURE EQUAL ERROR EXP EXPASS FALSE FILE FLOAT FOR GLOBAL GREATHER GREATHEREQ IF IN INSTANCEVAR INT LBRACK LINE LOCAL LOWER LOWEREQ MOD MODASS MODULE MUL MULASS NEWLINE NEXT NIL NOT NOTEQ NOTLOG NUMBER OR ORLOG PSEUDO RBRACK REDO RESCUE RETRY RETURN SELF STRING SUB SUBASS SUPER THEN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDcode : expr\n            | if\n            | while\n            | expresiones\n            | for\n            | assign\n            | code codewhile : WHILE logical code END\n             | WHILE logical DO salto code salto END\n             | WHILE logical DOBLEPOINT salto code salto END\n             | BEGIN code END WHILE logicallogical : term comparison term\n               | term comparison logical\n               | variable comparison term\n               | variable comparison boolean\n               | logical logcompare logical\n               | booleancomparison : EQUAL\n                  | NOTEQ\n                  | GREATHER\n                  | LOWER\n                  | GREATHEREQ\n                  | LOWEREQlogcompare : ANDLOG\n                  | ORLOG\n                  | NOTLOG\n                  | AND\n                  | OR\n                  | NOTassign : variable ASS expr\n              | variable ASS sexpr\n              | variable ASS arraymath : term arith term\n            | term arith math\n            | variable asig termvariable : LOCAL\n                | GLOBAL \n                | CONSTANTS \n                | INSTANCEVAR \n                | CLASSVARasig : ASS\n            | ADDASS\n            | SUBASS\n            | MULASS\n            | DIVASS\n            | MODASS\n            | EXPASSexpr :  math\n             | term\n             | sterm\n             | variable\n             | slice\n             | indexsexpr : sterm MUL term\n             | sterm ADD sexprterm : NUMBER\n            | FLOATsterm : STRINGarith : EXP\n             | MUL\n             | DIV\n             | MOD\n             | ADD\n             | SUBfor : FOR iterador IN expresiones code END\n           | FOR iterador IN expresiones DO code END\n           | FOR iterador IN array code END\n           | FOR iterador IN array DO code ENDsalto : NEWLINE if : IF logical expr END\n          | IF logical THEN expr END\n          | IF logical\n          | IF logical THEN\n          | if else\n          | if elsif ENDelse : ELSE code ENDelsif : ELSIF logical finalfinal : code\n             | THEN code\n             | code else\n             | code elsif iterador : variable\n                | variable COMA variableexpresiones : term DOUBLESECUENCEPOINT termarray : LBRACK defarray RBRACKdefarray : NUMBER \n                | NUMBER COMA defarray\n                | STRING\n                | STRING COMA defarray\n                | INT\n                | INT COMA defarray\n                | FLOAT\n                | FLOAT COMA defarray\n                | boolean\n                | boolean COMA defarrayindex : variable LBRACK INT RBRACKslice : variable LBRACK defslice RBRACKdefslice : INT DOBLEPOINT INT\n                    | INT DOBLEPOINT\n                    | DOBLEPOINT INTboolean : TRUE\n                | FALSE\n    '
    
_lr_action_items = {'IN':([12,19,20,21,24,39,40,119,],[-36,-38,-39,-40,-37,84,-82,-83,]),'EXPASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,51,51,51,]),'DO':([5,14,31,35,36,38,86,103,104,106,109,110,116,117,147,],[-56,-57,-102,-101,-17,82,-84,-12,-13,-16,-14,-15,140,142,-85,]),'FALSE':([6,8,26,61,62,63,64,65,66,67,69,70,72,73,75,76,78,79,94,111,146,148,149,150,151,],[31,31,31,-22,-23,-18,-19,-20,-21,31,31,-26,-29,-25,-28,-24,-27,31,31,31,31,31,31,31,31,]),'NEWLINE':([1,2,3,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,30,31,33,35,36,59,71,74,77,82,83,86,87,88,90,91,92,93,95,102,103,104,105,106,109,110,112,128,131,135,136,137,138,143,144,147,155,157,164,165,166,167,],[-1,-2,-50,-56,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,-7,-102,-72,-101,-17,-75,-49,-73,-51,113,113,-84,-33,-34,-30,-50,-31,-32,-35,-76,-12,-13,-70,-16,-14,-15,-8,-96,-97,-71,-11,113,113,-54,-55,-85,-65,-67,-9,-10,-66,-68,]),'NOTLOG':([5,14,31,33,35,36,38,58,103,104,106,109,110,136,],[-56,-57,-102,70,-101,-17,70,70,-12,70,70,-14,-15,70,]),'EXP':([5,14,17,71,87,],[-56,-57,42,42,42,]),'DIV':([5,14,17,71,87,],[-56,-57,44,44,44,]),'NOTEQ':([5,12,14,19,20,21,24,32,34,103,],[-56,-36,-57,-38,-39,-40,-37,64,64,64,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,81,84,86,87,88,90,91,92,93,94,95,99,100,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,120,128,131,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,155,156,157,158,164,165,166,167,],[5,-1,-2,-50,5,-56,5,5,5,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,5,-74,5,5,-102,5,-101,-17,5,5,5,-59,-63,-61,-64,-62,-60,5,5,5,-47,-42,-44,-46,-45,-43,5,-75,5,-22,-23,-18,-19,-20,-21,5,5,-26,-49,-29,-25,5,-28,-24,-51,-27,5,5,5,-84,-33,-34,-30,-50,-31,-32,125,-35,5,5,-76,-12,-13,-70,-16,-41,-14,-15,5,-8,-69,5,5,5,5,5,-96,-97,5,-71,-11,5,5,5,5,5,5,-54,-55,125,-85,125,125,125,125,-65,5,-67,5,-9,-10,-66,-68,]),'TRUE':([6,8,26,61,62,63,64,65,66,67,69,70,72,73,75,76,78,79,94,111,146,148,149,150,151,],[35,35,35,-22,-23,-18,-19,-20,-21,35,35,-26,-29,-25,-28,-24,-27,35,35,35,35,35,35,35,35,]),'IF':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,35,36,37,38,58,59,60,71,74,77,81,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[6,-1,-2,-50,6,-56,6,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,6,6,-102,-72,-101,-17,6,6,6,-75,6,-49,-73,-51,6,-84,-33,-34,-30,-50,-31,-32,-35,6,6,-76,-12,-13,-70,-16,-14,-15,-8,-69,6,6,6,6,-96,-97,6,-71,-11,6,6,6,6,6,6,-54,-55,-85,-65,6,-67,6,-9,-10,-66,-68,]),'BEGIN':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,35,36,37,38,58,59,60,71,74,77,81,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[7,-1,-2,-50,7,-56,7,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,7,7,-102,-72,-101,-17,7,7,7,-75,7,-49,-73,-51,7,-84,-33,-34,-30,-50,-31,-32,-35,7,7,-76,-12,-13,-70,-16,-14,-15,-8,-69,7,7,7,7,-96,-97,7,-71,-11,7,7,7,7,7,7,-54,-55,-85,-65,7,-67,7,-9,-10,-66,-68,]),'ELSIF':([1,2,3,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,30,31,33,35,36,59,71,74,77,86,87,88,90,91,92,93,95,99,102,103,104,105,106,109,110,112,128,131,135,136,143,144,147,155,157,164,165,166,167,],[-1,26,-50,-56,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,-7,-102,-72,-101,-17,-75,-49,-73,-51,-84,-33,-34,-30,-50,-31,-32,-35,26,-76,-12,-13,-70,-16,-14,-15,-8,-96,-97,-71,-11,-54,-55,-85,-65,-67,-9,-10,-66,-68,]),'INT':([56,94,97,129,146,148,149,150,151,],[96,126,130,152,126,126,126,126,126,]),'THEN':([5,14,31,33,35,36,58,103,104,106,109,110,],[-56,-57,-102,74,-101,-17,100,-12,-13,-16,-14,-15,]),'NOT':([5,14,31,33,35,36,38,58,103,104,106,109,110,136,],[-56,-57,-102,72,-101,-17,72,72,-12,72,72,-14,-15,72,]),'MULASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,53,53,53,]),'WHILE':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,35,36,37,38,58,59,60,71,74,77,80,81,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[8,-1,-2,-50,8,-56,8,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,8,8,-102,-72,-101,-17,8,8,8,-75,8,-49,-73,-51,111,8,-84,-33,-34,-30,-50,-31,-32,-35,8,8,-76,-12,-13,-70,-16,-14,-15,-8,-69,8,8,8,8,-96,-97,8,-71,-11,8,8,8,8,8,8,-54,-55,-85,-65,8,-67,8,-9,-10,-66,-68,]),'ADDASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,52,52,52,]),'DOUBLESECUENCEPOINT':([5,14,17,118,],[-56,-57,41,41,]),'COMA':([12,19,20,21,24,31,35,40,122,124,125,126,127,],[-36,-38,-39,-40,-37,-102,-101,85,146,148,149,150,151,]),'ADD':([5,14,17,18,71,87,91,145,],[-56,-57,43,-58,43,43,121,121,]),'MOD':([5,14,17,71,87,],[-56,-57,46,46,46,]),'AND':([5,14,31,33,35,36,38,58,103,104,106,109,110,136,],[-56,-57,-102,78,-101,-17,78,78,-12,78,78,-14,-15,78,]),'LOWER':([5,12,14,19,20,21,24,32,34,103,],[-56,-36,-57,-38,-39,-40,-37,66,66,66,]),'DIVASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,55,55,55,]),'RBRACK':([31,35,96,98,122,123,124,125,126,127,129,130,152,159,160,161,162,163,],[-102,-101,128,131,-92,147,-94,-86,-90,-88,-99,-100,-98,-93,-95,-87,-91,-89,]),'LOCAL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,42,43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,111,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[12,-1,-2,-50,12,-56,12,12,12,-3,-53,12,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,12,-74,12,12,-102,12,-101,-17,12,12,-59,-63,-61,-64,-62,-60,12,12,12,-75,12,-22,-23,-18,-19,-20,-21,12,12,-26,-49,-29,-25,12,-28,-24,-51,-27,12,12,-84,-33,-34,-30,-50,-31,-32,-35,12,12,-76,-12,-13,-70,-16,-14,-15,12,-8,-69,12,12,12,12,-96,-97,12,-71,-11,12,12,12,12,12,12,-54,-55,-85,-65,12,-67,12,-9,-10,-66,-68,]),'ORLOG':([5,14,31,33,35,36,38,58,103,104,106,109,110,136,],[-56,-57,-102,73,-101,-17,73,73,-12,73,73,-14,-15,73,]),'MODASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,54,54,54,]),'END':([1,2,3,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,33,35,36,37,59,60,68,71,74,77,81,86,87,88,90,91,92,93,95,99,101,102,103,104,105,106,107,109,110,112,113,128,131,132,133,134,135,136,139,141,143,144,147,153,154,155,156,157,158,164,165,166,167,],[-1,-2,-50,-56,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,59,-74,-7,-102,-72,-101,-17,80,-75,102,105,-49,-73,-51,112,-84,-33,-34,-30,-50,-31,-32,-35,-78,-77,-76,-12,-13,-70,-16,135,-14,-15,-8,-69,-96,-97,-80,-81,-79,-71,-11,155,157,-54,-55,-85,164,165,-65,166,-67,167,-9,-10,-66,-68,]),'LOWEREQ':([5,12,14,19,20,21,24,32,34,103,],[-56,-36,-57,-38,-39,-40,-37,62,62,62,]),'INSTANCEVAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,42,43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,111,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[20,-1,-2,-50,20,-56,20,20,20,-3,-53,20,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,20,-74,20,20,-102,20,-101,-17,20,20,-59,-63,-61,-64,-62,-60,20,20,20,-75,20,-22,-23,-18,-19,-20,-21,20,20,-26,-49,-29,-25,20,-28,-24,-51,-27,20,20,-84,-33,-34,-30,-50,-31,-32,-35,20,20,-76,-12,-13,-70,-16,-14,-15,20,-8,-69,20,20,20,20,-96,-97,20,-71,-11,20,20,20,20,20,20,-54,-55,-85,-65,20,-67,20,-9,-10,-66,-68,]),'$end':([1,2,3,4,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,30,31,33,35,36,59,71,74,77,86,87,88,90,91,92,93,95,102,103,104,105,106,109,110,112,128,131,135,136,143,144,147,155,157,164,165,166,167,],[-1,-2,-50,0,-56,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,-7,-102,-72,-101,-17,-75,-49,-73,-51,-84,-33,-34,-30,-50,-31,-32,-35,-76,-12,-13,-70,-16,-14,-15,-8,-96,-97,-71,-11,-54,-55,-85,-65,-67,-9,-10,-66,-68,]),'GREATHEREQ':([5,12,14,19,20,21,24,32,34,103,],[-56,-36,-57,-38,-39,-40,-37,61,61,61,]),'EQUAL':([5,12,14,19,20,21,24,32,34,103,],[-56,-36,-57,-38,-39,-40,-37,63,63,63,]),'GREATHER':([5,12,14,19,20,21,24,32,34,103,],[-56,-36,-57,-38,-39,-40,-37,65,65,65,]),'STRING':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,35,36,37,38,49,58,59,60,71,74,77,81,86,87,88,90,91,92,93,94,95,99,100,102,103,104,105,106,109,110,112,113,114,115,116,117,121,128,131,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,155,156,157,158,164,165,166,167,],[18,-1,-2,-50,18,-56,18,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,18,18,-102,18,-101,-17,18,18,18,18,-75,18,-49,18,-51,18,-84,-33,-34,-30,-50,-31,-32,127,-35,18,18,-76,-12,-13,-70,-16,-14,-15,-8,-69,18,18,18,18,18,-96,-97,18,-71,-11,18,18,18,18,18,18,-54,-55,127,-85,127,127,127,127,-65,18,-67,18,-9,-10,-66,-68,]),'CONSTANTS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,42,43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,111,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[19,-1,-2,-50,19,-56,19,19,19,-3,-53,19,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,19,-74,19,19,-102,19,-101,-17,19,19,-59,-63,-61,-64,-62,-60,19,19,19,-75,19,-22,-23,-18,-19,-20,-21,19,19,-26,-49,-29,-25,19,-28,-24,-51,-27,19,19,-84,-33,-34,-30,-50,-31,-32,-35,19,19,-76,-12,-13,-70,-16,-14,-15,19,-8,-69,19,19,19,19,-96,-97,19,-71,-11,19,19,19,19,19,19,-54,-55,-85,-65,19,-67,19,-9,-10,-66,-68,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,81,84,86,87,88,90,91,92,93,94,95,99,100,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,120,128,131,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,155,156,157,158,164,165,166,167,],[14,-1,-2,-50,14,-56,14,14,14,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,14,-74,14,14,-102,14,-101,-17,14,14,14,-59,-63,-61,-64,-62,-60,14,14,14,-47,-42,-44,-46,-45,-43,14,-75,14,-22,-23,-18,-19,-20,-21,14,14,-26,-49,-29,-25,14,-28,-24,-51,-27,14,14,14,-84,-33,-34,-30,-50,-31,-32,122,-35,14,14,-76,-12,-13,-70,-16,-41,-14,-15,14,-8,-69,14,14,14,14,14,-96,-97,14,-71,-11,14,14,14,14,14,14,-54,-55,122,-85,122,122,122,122,-65,14,-67,14,-9,-10,-66,-68,]),'ASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,49,108,108,]),'LBRACK':([12,19,20,21,24,25,49,77,84,],[-36,-38,-39,-40,-37,56,94,56,94,]),'CLASSVAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,42,43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,111,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[21,-1,-2,-50,21,-56,21,21,21,-3,-53,21,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,21,-74,21,21,-102,21,-101,-17,21,21,-59,-63,-61,-64,-62,-60,21,21,21,-75,21,-22,-23,-18,-19,-20,-21,21,21,-26,-49,-29,-25,21,-28,-24,-51,-27,21,21,-84,-33,-34,-30,-50,-31,-32,-35,21,21,-76,-12,-13,-70,-16,-14,-15,21,-8,-69,21,21,21,21,-96,-97,21,-71,-11,21,21,21,21,21,21,-54,-55,-85,-65,21,-67,21,-9,-10,-66,-68,]),'GLOBAL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,35,36,37,38,42,43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,111,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[24,-1,-2,-50,24,-56,24,24,24,-3,-53,24,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,24,-74,24,24,-102,24,-101,-17,24,24,-59,-63,-61,-64,-62,-60,24,24,24,-75,24,-22,-23,-18,-19,-20,-21,24,24,-26,-49,-29,-25,24,-28,-24,-51,-27,24,24,-84,-33,-34,-30,-50,-31,-32,-35,24,24,-76,-12,-13,-70,-16,-14,-15,24,-8,-69,24,24,24,24,-96,-97,24,-71,-11,24,24,24,24,24,24,-54,-55,-85,-65,24,-67,24,-9,-10,-66,-68,]),'OR':([5,14,31,33,35,36,38,58,103,104,106,109,110,136,],[-56,-57,-102,75,-101,-17,75,75,-12,75,75,-14,-15,75,]),'ELSE':([1,2,3,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,30,31,33,35,36,59,71,74,77,86,87,88,90,91,92,93,95,99,102,103,104,105,106,109,110,112,128,131,135,136,143,144,147,155,157,164,165,166,167,],[-1,29,-50,-56,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,-7,-102,-72,-101,-17,-75,-49,-73,-51,-84,-33,-34,-30,-50,-31,-32,-35,29,-76,-12,-13,-70,-16,-14,-15,-8,-96,-97,-71,-11,-54,-55,-85,-65,-67,-9,-10,-66,-68,]),'ANDLOG':([5,14,31,33,35,36,38,58,103,104,106,109,110,136,],[-56,-57,-102,76,-101,-17,76,76,-12,76,76,-14,-15,76,]),'FOR':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,35,36,37,38,58,59,60,71,74,77,81,86,87,88,90,91,92,93,95,99,100,102,103,104,105,106,109,110,112,113,114,115,116,117,128,131,134,135,136,137,138,139,140,141,142,143,144,147,155,156,157,158,164,165,166,167,],[11,-1,-2,-50,11,-56,11,-3,-53,-36,-52,-57,-4,-5,-49,-58,-38,-39,-40,-48,-6,-37,-51,-74,11,11,-102,-72,-101,-17,11,11,11,-75,11,-49,-73,-51,11,-84,-33,-34,-30,-50,-31,-32,-35,11,11,-76,-12,-13,-70,-16,-14,-15,-8,-69,11,11,11,11,-96,-97,11,-71,-11,11,11,11,11,11,11,-54,-55,-85,-65,11,-67,11,-9,-10,-66,-68,]),'DOBLEPOINT':([5,14,31,35,36,38,56,96,103,104,106,109,110,],[-56,-57,-102,-101,-17,83,97,129,-12,-13,-16,-14,-15,]),'MUL':([5,14,17,18,71,87,91,145,],[-56,-57,47,-58,47,47,120,120,]),'SUB':([5,14,17,71,87,],[-56,-57,45,45,45,]),'SUBASS':([12,19,20,21,24,25,77,89,],[-36,-38,-39,-40,-37,57,57,57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,4,7,29,30,33,37,38,49,58,60,74,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[1,1,1,1,1,68,1,1,90,1,1,107,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'defarray':([94,146,148,149,150,151,],[123,159,160,161,162,163,]),'asig':([25,77,89,],[50,50,50,]),'slice':([0,4,7,29,30,33,37,38,49,58,60,74,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'if':([0,4,7,29,30,37,38,58,60,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'salto':([82,83,137,138,],[114,115,153,154,]),'arith':([17,71,87,],[48,48,48,]),'expresiones':([0,4,7,29,30,37,38,58,60,81,84,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[15,15,15,15,15,15,15,15,15,15,116,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'logcompare':([33,38,58,104,106,136,],[69,69,69,69,69,69,]),'sterm':([0,4,7,29,30,33,37,38,49,58,60,74,81,99,100,114,115,116,117,121,134,137,138,139,140,141,142,156,158,],[3,3,3,3,3,3,3,3,91,3,3,3,3,3,3,3,3,3,3,145,3,3,3,3,3,3,3,3,3,]),'comparison':([32,34,103,],[67,79,67,]),'for':([0,4,7,29,30,37,38,58,60,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'term':([0,4,6,7,8,26,29,30,33,37,38,41,48,49,50,58,60,67,69,74,79,81,84,99,100,111,114,115,116,117,120,134,137,138,139,140,141,142,156,158,],[17,17,32,17,32,32,17,17,71,17,17,86,87,71,95,17,17,103,32,71,109,17,118,17,17,32,17,17,17,17,143,17,17,17,17,17,17,17,17,17,]),'code':([0,4,7,29,30,37,38,58,60,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[4,30,37,60,30,30,81,99,30,30,30,134,137,138,139,141,30,30,30,30,156,30,158,30,30,]),'logical':([6,8,26,67,69,111,],[33,38,58,104,106,136,]),'sexpr':([49,121,],[92,144,]),'else':([2,99,],[28,132,]),'iterador':([11,],[39,]),'assign':([0,4,7,29,30,37,38,58,60,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'math':([0,4,7,29,30,33,37,38,48,49,58,60,74,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[22,22,22,22,22,22,22,22,88,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'while':([0,4,7,29,30,37,38,58,60,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'array':([49,84,],[93,117,]),'elsif':([2,99,],[27,133,]),'final':([58,],[101,]),'defslice':([56,],[98,]),'index':([0,4,7,29,30,33,37,38,49,58,60,74,81,99,100,114,115,116,117,134,137,138,139,140,141,142,156,158,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'variable':([0,4,6,7,8,11,26,29,30,33,37,38,48,49,58,60,67,69,74,81,85,99,100,111,114,115,116,117,134,137,138,139,140,141,142,156,158,],[25,25,34,25,34,40,34,25,25,77,25,25,89,77,25,25,34,34,77,25,119,25,25,34,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'boolean':([6,8,26,67,69,79,94,111,146,148,149,150,151,],[36,36,36,36,36,110,124,36,124,124,124,124,124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> expr','code',1,'p_code','gramarRuby.py',8),
  ('code -> if','code',1,'p_code','gramarRuby.py',9),
  ('code -> while','code',1,'p_code','gramarRuby.py',10),
  ('code -> expresiones','code',1,'p_code','gramarRuby.py',11),
  ('code -> for','code',1,'p_code','gramarRuby.py',12),
  ('code -> assign','code',1,'p_code','gramarRuby.py',13),
  ('code -> code code','code',2,'p_code','gramarRuby.py',14),
  ('while -> WHILE logical code END','while',4,'p_while','gramarRuby.py',20),
  ('while -> WHILE logical DO salto code salto END','while',7,'p_while','gramarRuby.py',21),
  ('while -> WHILE logical DOBLEPOINT salto code salto END','while',7,'p_while','gramarRuby.py',22),
  ('while -> BEGIN code END WHILE logical','while',5,'p_while','gramarRuby.py',23),
  ('logical -> term comparison term','logical',3,'p_logical','gramarRuby.py',32),
  ('logical -> term comparison logical','logical',3,'p_logical','gramarRuby.py',33),
  ('logical -> variable comparison term','logical',3,'p_logical','gramarRuby.py',34),
  ('logical -> variable comparison boolean','logical',3,'p_logical','gramarRuby.py',35),
  ('logical -> logical logcompare logical','logical',3,'p_logical','gramarRuby.py',36),
  ('logical -> boolean','logical',1,'p_logical','gramarRuby.py',37),
  ('comparison -> EQUAL','comparison',1,'p_comparison','gramarRuby.py',45),
  ('comparison -> NOTEQ','comparison',1,'p_comparison','gramarRuby.py',46),
  ('comparison -> GREATHER','comparison',1,'p_comparison','gramarRuby.py',47),
  ('comparison -> LOWER','comparison',1,'p_comparison','gramarRuby.py',48),
  ('comparison -> GREATHEREQ','comparison',1,'p_comparison','gramarRuby.py',49),
  ('comparison -> LOWEREQ','comparison',1,'p_comparison','gramarRuby.py',50),
  ('logcompare -> ANDLOG','logcompare',1,'p_logcompare','gramarRuby.py',54),
  ('logcompare -> ORLOG','logcompare',1,'p_logcompare','gramarRuby.py',55),
  ('logcompare -> NOTLOG','logcompare',1,'p_logcompare','gramarRuby.py',56),
  ('logcompare -> AND','logcompare',1,'p_logcompare','gramarRuby.py',57),
  ('logcompare -> OR','logcompare',1,'p_logcompare','gramarRuby.py',58),
  ('logcompare -> NOT','logcompare',1,'p_logcompare','gramarRuby.py',59),
  ('assign -> variable ASS expr','assign',3,'p_assign','gramarRuby.py',63),
  ('assign -> variable ASS sexpr','assign',3,'p_assign','gramarRuby.py',64),
  ('assign -> variable ASS array','assign',3,'p_assign','gramarRuby.py',65),
  ('math -> term arith term','math',3,'p_math','gramarRuby.py',70),
  ('math -> term arith math','math',3,'p_math','gramarRuby.py',71),
  ('math -> variable asig term','math',3,'p_math','gramarRuby.py',72),
  ('variable -> LOCAL','variable',1,'p_variable','gramarRuby.py',77),
  ('variable -> GLOBAL','variable',1,'p_variable','gramarRuby.py',78),
  ('variable -> CONSTANTS','variable',1,'p_variable','gramarRuby.py',79),
  ('variable -> INSTANCEVAR','variable',1,'p_variable','gramarRuby.py',80),
  ('variable -> CLASSVAR','variable',1,'p_variable','gramarRuby.py',81),
  ('asig -> ASS','asig',1,'p_asig','gramarRuby.py',85),
  ('asig -> ADDASS','asig',1,'p_asig','gramarRuby.py',86),
  ('asig -> SUBASS','asig',1,'p_asig','gramarRuby.py',87),
  ('asig -> MULASS','asig',1,'p_asig','gramarRuby.py',88),
  ('asig -> DIVASS','asig',1,'p_asig','gramarRuby.py',89),
  ('asig -> MODASS','asig',1,'p_asig','gramarRuby.py',90),
  ('asig -> EXPASS','asig',1,'p_asig','gramarRuby.py',91),
  ('expr -> math','expr',1,'p_expr','gramarRuby.py',95),
  ('expr -> term','expr',1,'p_expr','gramarRuby.py',96),
  ('expr -> sterm','expr',1,'p_expr','gramarRuby.py',97),
  ('expr -> variable','expr',1,'p_expr','gramarRuby.py',98),
  ('expr -> slice','expr',1,'p_expr','gramarRuby.py',99),
  ('expr -> index','expr',1,'p_expr','gramarRuby.py',100),
  ('sexpr -> sterm MUL term','sexpr',3,'p_sexpr','gramarRuby.py',105),
  ('sexpr -> sterm ADD sexpr','sexpr',3,'p_sexpr','gramarRuby.py',106),
  ('term -> NUMBER','term',1,'p_term','gramarRuby.py',113),
  ('term -> FLOAT','term',1,'p_term','gramarRuby.py',114),
  ('sterm -> STRING','sterm',1,'p_sterm','gramarRuby.py',118),
  ('arith -> EXP','arith',1,'p_arith','gramarRuby.py',122),
  ('arith -> MUL','arith',1,'p_arith','gramarRuby.py',123),
  ('arith -> DIV','arith',1,'p_arith','gramarRuby.py',124),
  ('arith -> MOD','arith',1,'p_arith','gramarRuby.py',125),
  ('arith -> ADD','arith',1,'p_arith','gramarRuby.py',126),
  ('arith -> SUB','arith',1,'p_arith','gramarRuby.py',127),
  ('for -> FOR iterador IN expresiones code END','for',6,'p_for','gramarRuby.py',131),
  ('for -> FOR iterador IN expresiones DO code END','for',7,'p_for','gramarRuby.py',132),
  ('for -> FOR iterador IN array code END','for',6,'p_for','gramarRuby.py',133),
  ('for -> FOR iterador IN array DO code END','for',7,'p_for','gramarRuby.py',134),
  ('salto -> NEWLINE','salto',1,'p_salto','gramarRuby.py',142),
  ('if -> IF logical expr END','if',4,'p_if','gramarRuby.py',148),
  ('if -> IF logical THEN expr END','if',5,'p_if','gramarRuby.py',149),
  ('if -> IF logical','if',2,'p_if','gramarRuby.py',150),
  ('if -> IF logical THEN','if',3,'p_if','gramarRuby.py',151),
  ('if -> if else','if',2,'p_if','gramarRuby.py',152),
  ('if -> if elsif END','if',3,'p_if','gramarRuby.py',153),
  ('else -> ELSE code END','else',3,'p_else','gramarRuby.py',164),
  ('elsif -> ELSIF logical final','elsif',3,'p_elsif','gramarRuby.py',168),
  ('final -> code','final',1,'p_final','gramarRuby.py',175),
  ('final -> THEN code','final',2,'p_final','gramarRuby.py',176),
  ('final -> code else','final',2,'p_final','gramarRuby.py',177),
  ('final -> code elsif','final',2,'p_final','gramarRuby.py',178),
  ('iterador -> variable','iterador',1,'p_iterador','gramarRuby.py',185),
  ('iterador -> variable COMA variable','iterador',3,'p_iterador','gramarRuby.py',186),
  ('expresiones -> term DOUBLESECUENCEPOINT term','expresiones',3,'p_expresiones','gramarRuby.py',193),
  ('array -> LBRACK defarray RBRACK','array',3,'p_array','gramarRuby.py',198),
  ('defarray -> NUMBER','defarray',1,'p_defarray','gramarRuby.py',202),
  ('defarray -> NUMBER COMA defarray','defarray',3,'p_defarray','gramarRuby.py',203),
  ('defarray -> STRING','defarray',1,'p_defarray','gramarRuby.py',204),
  ('defarray -> STRING COMA defarray','defarray',3,'p_defarray','gramarRuby.py',205),
  ('defarray -> INT','defarray',1,'p_defarray','gramarRuby.py',206),
  ('defarray -> INT COMA defarray','defarray',3,'p_defarray','gramarRuby.py',207),
  ('defarray -> FLOAT','defarray',1,'p_defarray','gramarRuby.py',208),
  ('defarray -> FLOAT COMA defarray','defarray',3,'p_defarray','gramarRuby.py',209),
  ('defarray -> boolean','defarray',1,'p_defarray','gramarRuby.py',210),
  ('defarray -> boolean COMA defarray','defarray',3,'p_defarray','gramarRuby.py',211),
  ('index -> variable LBRACK INT RBRACK','index',4,'p_index','gramarRuby.py',220),
  ('slice -> variable LBRACK defslice RBRACK','slice',4,'p_slice','gramarRuby.py',224),
  ('defslice -> INT DOBLEPOINT INT','defslice',3,'p_defslice','gramarRuby.py',228),
  ('defslice -> INT DOBLEPOINT','defslice',2,'p_defslice','gramarRuby.py',229),
  ('defslice -> DOBLEPOINT INT','defslice',2,'p_defslice','gramarRuby.py',230),
  ('boolean -> TRUE','boolean',1,'p_boolean','gramarRuby.py',240),
  ('boolean -> FALSE','boolean',1,'p_boolean','gramarRuby.py',241),
]
